@model MATO.NET.ViewModels.ModifyUserViewModel
@*@{
    List<SelectListItem> items = new List<SelectListItem>();
    items.Add(new SelectListItem { Text = "Fee", Value = "Fee" });
    items.Add(new SelectListItem { Text = "Royalty", Value = "Royalty" });
    items.Add(new SelectListItem { Text = "Title Dependent", Value = "Title Dependent" });
}*@
<fieldset>
    <legend>Modify User</legend>
    <div class="clearfix" style="margin-bottom:10px;"></div>
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(m => m.SelectedUserId)
            <br>
            @Html.DropDownListFor(m => m.SelectedUserId, new SelectList(Model.Users, "Id", "FullName"), "", new { @class = "form-control", @onchange = "getUserDetails(this.value)" })
            <br>
        </div>
    </div>
    <div class="clear"></div>
</fieldset>

<div id="userForm" style="display: none; margin-top: 20px;">
    <input type="hidden" id="userId" />
    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(m => m.FirstName)
            <br>
            @Html.TextBoxFor(model => Model.FirstName, null, new { @class = "form-control", id = "userFirstName" })
            <br>
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.LastName)
            <br>
            @Html.TextBoxFor(model => Model.LastName, null, new { @class = "form-control", id = "userLastName" })
            <br>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(m => m.EmailAddress)
            <br>
            @Html.TextBoxFor(model => Model.EmailAddress, null, new { @class = "form-control", id = "userEmailAddress" })
            <br>
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.RegionId)
            <br>
            @Html.DropDownListFor(m => m.RegionId, new SelectList(Model.Region, "Id", "Name"), "", new { @class = "form-control", id = "userRegion" })
            <br>
        </div>
    </div>

    <div class="row">
        <div class="col-md-6">
            @Html.LabelFor(m => m.Country)
            <br>
            @Html.TextBoxFor(model => Model.Country, null, new { @class = "form-control", id = "userCountry" })
            <br>
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.UserGroupId)
            <br>
            @Html.DropDownListFor(m => m.UserGroupId, new SelectList(Model.Roles, "Name", "Name"), "", new { @class = "form-control", id = "userRoles" })
            <br>
        </div>
    </div>

    <div class="row" id="authorDetailsForm" style="display: none">
        <div class="col-md-6">
            @*@Html.LabelFor(m => m.AuthorDetails.AuthorType)*@
            <br>
            @*@Html.DropDownListFor(m => m.AuthorDetails.AuthorType, items, "", new { @class = "form-control", id = "authorType" })
            <br>*@
            @Html.TextAreaFor(n => n.AuthorDetails.AuthorNotes, new { @class = "form-control", @id = "authorDetails", @rows = 5 })
            <br>
        </div>
        <div class="col-md-6">
            @Html.LabelFor(m => m.AuthorDetails.AddressLine1)
            <br>
            @Html.TextBoxFor(model => Model.AuthorDetails.AddressLine1, null, new { @class = "form-control", id = "authorAddress1" })
            <br>
            @Html.LabelFor(m => m.AuthorDetails.AddressLine2)
            <br>
            @Html.TextBoxFor(model => Model.AuthorDetails.AddressLine2, null, new { @class = "form-control", id = "authorAddress2" })
            <br>
            @Html.LabelFor(m => m.AuthorDetails.AddressLine3)
            <br>
            @Html.TextBoxFor(model => Model.AuthorDetails.AddressLine3, null, new { @class = "form-control", id = "authorAddress3" })
            <br>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <span style="font-size: 11px; font-weight: 600; color: #ff0000; text-decoration: underline; cursor: pointer;" data-toggle="modal" data-target="#deleteUser">Delete User</span>
            <button type="submit" class="btn btn-danger pull-right" id="updateUserDetails">Update</button>
        </div>
    </div>
</div>

<div class="modal inmodal" id="deleteUser" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <div class="row">
                    <div class="col-md-12">
                        <h3 class="text-center"> Are you user you want to delete this user?</h3>
                    </div>
                </div>
            </div>
            <div class="modal-body">
                <button type="submit" class="btn btn-default pull-right " data-dismiss="modal">Cancel</button>
                <button type="submit" class="btn btn-danger pull-right mr10" id="deleteUserConfirm">Delete</button>
                <div class="clearfix"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>
        function getUserDetails(user) {
            //console.log(user);

            $.ajax({
                url: '/Admin/GetUserDetails',
                type: 'POST',
                dataType: "json",
                data: JSON.stringify({
                    Id: user
                }),
                contentType: 'application/json',
                success: function (data) {
                    var obj = JSON.parse(data);
                    //console.log(obj);

                    $("#userId").val(obj.user.Id);
                    $("#userFirstName").val(obj.user.FirstName);
                    $('#userLastName').val(obj.user.LastName);

                    $("#userEmailAddress").val(obj.user.Email);
                    $('#userRegion').val(obj.user.Region);

                    $("#userCountry").val(obj.user.Country);
                    $('#userRoles').val(obj.role);

                    //console.log(obj.role);

                    if (obj.role === "Author") {
                        //console.log(obj.role);
                        $("#authorDetailsForm").show();
                    } else {
                        $("#authorDetailsForm").hide();
                    }

                    if (obj.aud !== null) {
                        $("#authorAddress1").val(obj.aud.AddressLine1);
                        $("#authorAddress2").val(obj.aud.AddressLine2);
                        $("#authorAddress3").val(obj.aud.AddressLine3);

                        $("#authorType").val(obj.aud.AuthorType);
                        $("#authorDetails").val(obj.aud.AuthorNotes);
                    }

                    $("#userForm").show();

                },
                error: function (e) {
                    console.log(e);
                }
            });
        };
    </script>

    <script>
        $("#userRoles").change(function () {
            if ($('#userRoles').find(":selected").text() === "Author") {
                $("#authorDetailsForm").show();
            } else if ($('#userRoles').find(":selected").text() !== "Author") {
                $("#authorDetailsForm").hide();
            }
        });
    </script>

    <script>


        $("#deleteUserConfirm").on('click',
            function () {
                debugger;
                var userId = $("#userId").val();

                $.ajax({
                    url: '/Admin/DeleteUser',
                    type: 'POST',
                    dataType: "json",
                    data: JSON.stringify({
                        UserId: userId
                    }),
                    contentType: 'application/json',
                    success: function (data) {
                        $.toast({
                            heading: "User Deleted",
                            text: "This user has been deleted. Redirecting back to the Admin Dashboard",
                            showHideTransition: 'slide', // It can be plain, fade or slide
                            bgColor: 'green', // Background color for toast
                            textColor: '#fff', // text color
                            allowToastClose: false, // Show the close button or not
                            hideAfter: 5000, // `false` to make it sticky or time in miliseconds to hide after
                            stack:
                                1, // `fakse` to show one stack at a time count showing the number of toasts that can be shown at once
                            textAlign: 'left', // Alignment of text i.e. left, right, center
                            position:
                                'bottom-left' // bottom-left or bottom-right or bottom-center or top-left or top-right or top-center or mid-center or an object representing the left, right, top, bottom values to position the toast on page
                        });

                        setTimeout(function () {
                            window.setTimeout(window.location.replace("/Admin/Index"), 3000);
                        }, 3000);

                    },
                    error: function (e) {
                        $.toast({
                            heading: "Oops!",
                            text: "Something went wrong when trying to delete this user, please try again.",
                            showHideTransition: 'slide',
                            bgColor: 'red',
                            textColor: '#fff',
                            allowToastClose: false,
                            hideAfter: 5000,
                            stack: 1,
                            textAlign: 'left',
                            position: 'top-right'
                        });
                    }
                });
            });
    </script>

    <script>
        $("#updateUserDetails").on('click', function () {

            var fname = $("#userFirstName").val();
            var lname = $('#userLastName').val();
            var email = $("#userEmailAddress").val();
            var region = $('#userRegion').val();
            var country = $("#userCountry").val();
            var role = $("#userRoles").val();
            var userId = $("#userId").val();
            var addressLine1 = $("#authorAddress1").val();
            var addressLine2 = $("#authorAddress2").val();
            var addressLine3 = $("#authorAddress3").val();

            var authorType = $('#authorType').find(":selected").text();
            var notes = $("#authorDetails").val();

            $.ajax({
                url: '/Admin/UpdateUserDetails',
                type: 'POST',
                dataType: "json",
                data: JSON.stringify({
                    UserId: userId,
                    FirstName: fname,
                    LastName: lname,
                    Email: email,
                    Region: region,
                    Country: country,
                    Role: role,
                    AddressLine1: addressLine1,
                    AddressLine2: addressLine2,
                    AddressLine3: addressLine3,
                    AuthorType: authorType,
                    AuthorNotes: notes
                }),
                contentType: 'application/json',
                success: function (data) {
                    $.toast({
                        heading: "User successfully updated!",
                        text: "The changes to this have been successfully saved",
                        showHideTransition: 'slide', // It can be plain, fade or slide
                        bgColor: 'green', // Background color for toast
                        textColor: '#fff', // text color
                        allowToastClose: false, // Show the close button or not
                        hideAfter: 5000, // `false` to make it sticky or time in miliseconds to hide after
                        stack:
                            1, // `fakse` to show one stack at a time count showing the number of toasts that can be shown at once
                        textAlign: 'left', // Alignment of text i.e. left, right, center
                        position:
                            'bottom-left' // bottom-left or bottom-right or bottom-center or top-left or top-right or top-center or mid-center or an object representing the left, right, top, bottom values to position the toast on page
                    });
                },
                error: function (e) {
                    console.log(JSON.stringify(e));
                    $.toast({
                        heading: "Oops!",
                        text: "Something went wrong when trying to update this user, please try again.",
                        showHideTransition: 'slide',
                        bgColor: 'red',
                        textColor: '#fff',
                        allowToastClose: false,
                        hideAfter: 5000,
                        stack: 1,
                        textAlign: 'left',
                        position: 'top-right'
                    });
                }
            });
        });
    </script>

    <script>
        $(".breadCrumbLinks").append("<li><a href=\"/Admin/Index\">Admin</a></li><li>Modify a User</li>");
    </script>

    <script>
        $(document).ready(function () {
            $('.authorList').select2();
        });
    </script>
}